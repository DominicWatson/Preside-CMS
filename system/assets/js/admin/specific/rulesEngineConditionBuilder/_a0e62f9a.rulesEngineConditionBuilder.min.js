!function($){var expressionLib=cfrequest.rulesEngineExpressions||{},renderFieldEndpoint=cfrequest.rulesEngineRenderFieldEndpoint||"",RulesEngineCondition=function(){function RulesEngineCondition(a,b,c){this.$formControl=a,this.$ruleList=c,this.model=this.deserialize(this.$formControl.val()),this.expressions=b,this.fieldRenderCache={},this.setupBehaviors(),this.render()}return RulesEngineCondition.prototype.persistToHiddenField=function(){this.$formControl.val(this.serialize())},RulesEngineCondition.prototype.serialize=function(){return JSON.stringify(this.model)},RulesEngineCondition.prototype.deserialize=function(a){if(this.isValidSerializedCondition(a))try{return JSON.parse(a)}catch(a){}return[]},RulesEngineCondition.prototype.isValidSerializedCondition=function(a){return"string"==typeof a&&0!==$.trim(a).length},RulesEngineCondition.prototype.render=function(){var a,b,c,d=this;for(b=function(a,c,e){var f,g,h=[],i=20*c,j='<li class="rules-engine-condition-builder-expression" style="margin-left:'+i+'px"></li>';for(g=0;g<a.length;g++){var k=g%2,l=a[g];k?(f=$(j),f.data("modelIndex",e.concat([g])),f.html('<a class="rules-engine-condition-builder-join-toggle">'+i18n.translateResource("cms:rulesEngine.join."+l)+"</a>"),h.push(f)):Array.isArray(l)?h=h.concat(b(l,c+1,e.concat([g]))):(f=$(j),f.data("modelIndex",e.concat([g])),f.html(d.renderExpression(l)),h.push(f))}return h},a=b(this.model,0,[]),this.$ruleList.html(""),c=0;c<a.length;c++)this.$ruleList.append(a[c])},RulesEngineCondition.prototype.addExpression=function(a){var b=this.newExpression(a);this.model.length&&this.model.push("and"),this.model.push(b),this.persistToHiddenField(),this.render()},RulesEngineCondition.prototype.newExpression=function(a){var b,c=this.getExpression(a);if(null===c)return{};b={expression:c.id,fields:{}};for(fieldName in c.fields)"undefined"==typeof c.fields[fieldName].default?b.fields[fieldName]=null:b.fields[fieldName]=c.fields[fieldName].default;return b},RulesEngineCondition.prototype.getExpression=function(a){var b,c;for(b=this.expressions.length-1;b>=0;b--)if(c=this.expressions[b],c.id.toLowerCase()===a.toLowerCase())return c},RulesEngineCondition.prototype.removeExpression=function(){console.log("TODO: removeExpression() logic"),this.persistToHiddenField(),this.render()},RulesEngineCondition.prototype.saveExpressionFieldValue=function(){console.log("TODO: saveExpressionFieldValue() logic"),this.persistToHiddenField(),this.render()},RulesEngineCondition.prototype.renderExpression=function(a){var b,c,d,e,f,g=this.getExpression(a.expression),h=g.text||"",i=$("<span></span>");if("undefined"==typeof g.id)return"";for(b in a.fields)d=new RegExp("{"+b+"}","gi"),h=h.replace(d,'<span data-field-name="'+b+'"></span>');i.html(h);for(b in a.fields)c=a.fields[b],f=i.find("[data-field-name="+b+"]"),e=g.fields[b]||{},this.renderField(b,c,e,f);return i},RulesEngineCondition.prototype.renderField=function(a,b,c,d){var e=JSON.stringify({fieldName:a,fieldValue:b,fieldDefinition:c});null!==b?(d.addClass("rules-engine-condition-builder-field-loading").html("&hellip;"),this.fieldRenderCache[e]||(this.fieldRenderCache[e]=$.post(renderFieldEndpoint,$.extend({},{fieldValue:b},c))),this.fieldRenderCache[e].done(function(a){d.html('<a class="rules-engine-condition-builder-field-link">'+a+"</a>")})):d.html('<a class="rules-engine-condition-builder-field-link">['+c.defaultLabel+"]</a>")},RulesEngineCondition.prototype.setupBehaviors=function(){var a=this;this.$ruleList.on("click",".rules-engine-condition-builder-join-toggle",function(b){b.preventDefault(),a.toggleJoin($(this))})},RulesEngineCondition.prototype.getModelIndexString=function(a){var b,c="this.model[";for(b=0;b<a.length;b++)c+=a[b],b<a.length-1&&(c+="][");return c+="]"},RulesEngineCondition.prototype.toggleJoin=function($clickedJoin){var $li=$clickedJoin.closest(".rules-engine-condition-builder-expression"),modelIndexString,currentValue,newValue;$li.length&&(modelIndexString=this.getModelIndexString($li.data("modelIndex")),currentValue=eval(modelIndexString),newValue="and"===currentValue?"or":"and",eval(modelIndexString+' = "'+newValue+'"'),this.render())},RulesEngineCondition}();$.fn.rulesEngineConditionBuilder=function(){return this.each(function(){var a,b,c,d,e,f,g,h,i=$(this),j=i.next("div.rules-engine-condition-builder"),k=j.find(".rules-engine-condition-builder-expression-search"),l=j.find(".rules-engine-condition-builder-expressions-list"),m=j.find(".rules-engine-condition-builder-condition-pane"),n=j.find(".rules-engine-condition-builder-rule-list"),o=l.find("> li"),p=(i.attr("tabindex"),i.val(),expressionLib[i.attr("id")]||[]);d=function(){var d=i.attr("id"),g=i.attr("name"),h=(i.attr("tabindex"),i.val());j.removeClass("hide"),k.on("keyup",c),a=$('<input type="hidden">'),a.val(h),a.attr("name",g),i.after(a),i.remove(),a.attr("id",d),b=new RulesEngineCondition(a,p,n),e(),f()},e=function(){o.each(function(){var a=$(this);a.data("originalText",a.text())})},c=function(){var a=k.val();o.each(function(){var b=$(this),c=b.data("originalText");a.length?c.toLowerCase().includes(a.toLowerCase())?(b.removeClass("hide"),b.html(c.replace(new RegExp(a,"gi"),function(a){return"<b>"+a+"</b>"}))):b.addClass("hide"):(b.removeClass("hide"),b.html(c))})},f=function(){o.draggable({helper:"clone"}),m.droppable({accept:o,drop:g,hoverClass:"ui-droppable-hover"})},g=function(a,c){var d=c.draggable.clone();b.addExpression(d.data("id"))},h=function(){},d()})},$("textarea.rules-engine-condition-builder").rulesEngineConditionBuilder()}(presideJQuery);
//# sourceMappingURL=_rulesEngineConditionBuilder.min.map