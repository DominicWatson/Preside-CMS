name: Continuous Integration
on:
  push:
  pull_request:
jobs:
  ci:
    name: Preside CI
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'twgit init')"
    services:
      mysql:
          image: mysql:5.7
          env:
              MYSQL_ALLOW_EMPTY_PASSWORD: yes
              MYSQL_DATABASE: preside_test
          ports:
              - 3306:3306
          options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install dependencies
        uses: ./.github/actions/install

      - name: Run tests
        uses: ./.github/actions/runtests
        env:
          PRESIDETEST_DB_PORT: ${{ job.services.mysql.ports[3306] }}
          PRESIDETEST_DB_HOST: mysql

      - name: Compile with Grunt
        # if: "github.event.name != 'pull_request' && (startsWith( github.ref, 'refs/heads/release-' ) || startsWith( github.ref, 'refs/tags/v' ) )"
        uses: elstudio/actions-js-build/build@v2
        with:
          wdPath: './system/assets'

      - name: Generate release version number
        id: versiongen
        # if: "github.event.name != 'pull_request' && (startsWith( github.ref, 'refs/heads/release-' ) || startsWith( github.ref, 'refs/tags/v' ) )"
        uses: pixl8/github-action-twgit-release-version-generator@v1
        with:
          build_number_start: 8000

      - name: Package
        id: package
        # if: "github.event.name != 'pull_request' && (startsWith( github.ref, 'refs/heads/release-' ) || startsWith( github.ref, 'refs/tags/v' ) )"
        uses: ./.github/actions/package
        with:
          release_version: ${{ steps.versiongen.outputs.semver_release_string }}
          is_snapshot: ${{ steps.versiongen.outputs.semver_release_is_snapshot }}

      # - name: Publish to forgebox
      #   uses: pixl8/github-action-box-publish@v1
      #   with:
      #     forgebox_user: pixl8
      #     forgebox_pass: ${{ secrets.FORGEBOX_PASS }}
      #   env:
      #     VERSION_NUMBER: ${{ steps.versiongen.outputs.semver_release_string }}
      #     DOWNLOAD_LOCATION: ${{ steps.upload.outputs.browser_download_url }}